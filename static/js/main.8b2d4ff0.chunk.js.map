{"version":3,"sources":["Stopwatch.js","App.js","index.js"],"names":["StyledStopwatch","styled","main","_templateObject","props","theme","secondaryColor","mainColor","Stopwatch","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","startButton","setState","state","isRunning","clearInterval","timer","startTime","Date","now","timeRunning","setInterval","splitButton","splits","length","splitsTotal","reduce","total","current","newSplit","push","resetButton","formatTime","milliseconds","toISOString","slice","_this2","_this$state","react_default","a","createElement","className","map","split","i","key","type","onClick","concat","href","target","rel","react_svg","src","Component","GlobalStyleProvider","createGlobalStyle","App_templateObject","App","Fragment","styled_components_browser_esm","src_Stopwatch","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8b2d4ff0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components'\r\nimport ReactSVG from 'react-svg'\r\n\r\n\r\nconst StyledStopwatch = styled.main`\r\n  text-align: center;\r\n\r\n  article {\r\n    background-color: ${props => props.theme.secondaryColor};\r\n    min-height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    ul {\r\n      list-style-type: none;\r\n      color: ${props => props.theme.mainColor};\r\n      width: 100%;\r\n      padding: 0;\r\n      text-align: left;\r\n    }\r\n\r\n    .timer {\r\n      color: ${props => props.theme.mainColor};\r\n      font-size: calc(20px + 5vmin);\r\n      margin-bottom: 0;\r\n    }\r\n\r\n    .button-container {\r\n      width: 900px;\r\n      max-width: 90%;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      flex-wrap: wrap;\r\n\r\n      button {\r\n        color: ${props => props.theme.mainColor};\r\n        font-size: calc(10px + 2vmin);\r\n        margin: 0.5em;\r\n        padding: 0.25em 5%;\r\n        background: transparent;\r\n        border: 3px solid ${props => props.theme.mainColor};\r\n        border-radius: 3px;\r\n        transition: 300ms;\r\n        &.inactive {\r\n            opacity: 0.5;\r\n        }\r\n      }\r\n    }\r\n\r\n    svg {\r\n      width: 50px;\r\n    }\r\n  }\r\n`\r\n\r\nclass Stopwatch extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      isRunning: false,\r\n      timeRunning: 0,\r\n      splits: [],\r\n    }\r\n  }\r\n\r\n  startButton = () => {\r\n    this.setState(state => {\r\n      if(!!state.isRunning) {\r\n        clearInterval(this.timer)\r\n      } else {\r\n        const startTime = Date.now() - this.state.timeRunning\r\n        this.timer = setInterval(() => {\r\n          this.setState({ timeRunning: Date.now() - startTime })\r\n        })\r\n      }\r\n      return { isRunning: !state.isRunning }\r\n    })\r\n  }\r\n\r\n  splitButton = () => {\r\n    const splits = this.state.splits\r\n    if(splits.length >= 1) {\r\n      const splitsTotal = splits.reduce((total, current) => (\r\n        total + current\r\n      ))\r\n      const newSplit = this.state.timeRunning - splitsTotal\r\n      splits.push(newSplit)\r\n    } else {\r\n      splits.push(this.state.timeRunning)\r\n    }\r\n    this.setState({ splits })\r\n  }\r\n\r\n  resetButton = () => {\r\n    this.setState({\r\n      timeRunning: 0,\r\n      isRunning: false,\r\n      splits: [],\r\n    })\r\n  }\r\n\r\n  formatTime = (milliseconds) => {\r\n    return new Date(milliseconds).toISOString().slice(11, -1)\r\n  }\r\n\r\n  render() {\r\n    const { isRunning, timeRunning, splits } = this.state;\r\n    \r\n    return (\r\n      <StyledStopwatch>\r\n        <article className=\"App-header\">\r\n          <div className=\"timer-container\">\r\n            <p className=\"timer\">{this.formatTime(timeRunning)}</p>\r\n            <ul>\r\n              {splits.map((split, i) => (\r\n                <li key={i}>{this.formatTime(split)}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div className=\"button-container\">\r\n            <button type=\"button\" className=\"start-button\" onClick={this.startButton}>\r\n              { isRunning ? 'Stop' : 'Start'}\r\n            </button>\r\n            <button type=\"button\" className={`split-button${isRunning ? '' : ' inactive'}`} onClick={isRunning ? this.splitButton : null}>\r\n              Split\r\n            </button>\r\n            <button type=\"button\" className={`reset-button${isRunning ? ' inactive' : ''}`} onClick={isRunning ? null : this.resetButton}>\r\n              Reset\r\n            </button>\r\n          </div>\r\n          <a href=\"https://github.com/devolasvegas/react-stopwatch\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <ReactSVG src=\"/img/github-logo.svg\" />\r\n          </a>\r\n        </article>\r\n      </StyledStopwatch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stopwatch;\r\n","import React, { Component } from 'react'\r\nimport { createGlobalStyle, ThemeProvider } from 'styled-components'\r\n\r\nimport Stopwatch from './Stopwatch'\r\n\r\nconst theme = {\r\n  mainColor: '#bada55',\r\n  secondaryColor: '#282c34',\r\n}\r\n\r\nconst GlobalStyleProvider = createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\r\n      \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\r\n      sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n\r\n  code {\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\r\n      monospace;\r\n  }\r\n`\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <GlobalStyleProvider />\r\n        <ThemeProvider theme={theme}>\r\n          <Stopwatch />\r\n        </ThemeProvider>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}